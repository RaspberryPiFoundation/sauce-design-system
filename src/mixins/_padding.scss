@use 'lib/spacing';
@use 'lib/warn';

@mixin reset {
  padding: 0;
}

@mixin all($sizes) {
  @include spacing.output('padding', $sizes);
}

@mixin h($sizes) {
  // @include warn.deprecated('Use padding.inline instead');
  @include inline($sizes);
}

@mixin inline($sizes) {
  @include spacing.output(
    [ 'padding-left',
    'padding-right',
    'padding-inline' ],
    $sizes
  );
}

@mixin v($sizes) {
  // @include warn.deprecated('Use padding.block instead');
  @include block($sizes);
}

@mixin block($sizes) {
  @include spacing.output(
    [ 'padding-top',
    'padding-bottom',
    'padding-block' ],
    $sizes
  );
}

@mixin t($sizes) {
  @include spacing.output([ 'padding-top', 'padding-block-start' ], $sizes);
}

@mixin r($sizes) {
  @include spacing.output([ 'padding-right', 'padding-inline-end' ], $sizes);
}

@mixin b($sizes) {
  @include spacing.output([ 'padding-bottom', 'padding-block-end' ], $sizes);
}

@mixin l($sizes) {
  @include spacing.output([ 'padding-left', 'padding-inline-start' ], $sizes);
}
