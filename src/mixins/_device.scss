@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use 'src/tokens/breakpoint';

@mixin high-dpi {
  @include mq('min-resolution', 2dpi) {
    @content;
  }
}

@mixin mq($metric, $value: null) {
  @media only screen and ($metric: $value) {
    @content;
  }
}

@mixin reduced-motion {
  @include mq('prefers-reduced-motion', reduce) {
    @content;
  }
}

@mixin min-width($value) {
  @if (math.unit($value) != 'px') {
    @warn "Please specify min-width value with in `px`";
  }

  @include mq('min-width', $value) {
    @content;
  }
}

@mixin respond-to($device) {
  @warn "Please try to avoid using the named breakpoints and this mixin!";

  @if list.index(breakpoint.$devices, $device) == null {
    @error "Invalid device: #{$device}";
  }

  $metric: min-width;
  $value: breakpoint.$laptop !default;

  @if $device == 'phone-portrait' {
    $metric: max-width;
    $value: breakpoint.$phone-portrait !default;
  } @else if $device == 'phone-landscape' {
    $value: breakpoint.$phone-landscape;
  } @else if $device == 'tablet-portrait' {
    $value: breakpoint.$tablet-portrait;
  } @else if $device == 'tablet-landscape' {
    $value: breakpoint.$tablet-landscape;
  } @else if $device == 'laptop' {
    $value: breakpoint.$laptop;
  }

  @include mq($metric, $value) {
    @content;
  }
}
