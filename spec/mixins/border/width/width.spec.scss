@use 'true' as *;
@use 'scss/mixins/border/width';

@include describe('.all') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include width.all(1rem); }
      @include expect {
        --border-width: 1rem;
        border-width: var(--border-width);
      }
    }
  }
}

@include describe('.top') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include width.top(1rem); }
      @include expect {
        --border-block-start-width: 1rem;
        border-top-width: var(--border-block-start-width);
        border-block-start-width: var(--border-block-start-width);
      }
    }
  }
}

@include describe('.right') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include width.right(1rem); }
      @include expect {
        --border-inline-end-width: 1rem;
        border-right-width: var(--border-inline-end-width);
        border-inline-end-width: var(--border-inline-end-width);
      }
    }
  }
}

@include describe('.bottom') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include width.bottom(1rem); }
      @include expect {
        --border-block-end-width: 1rem;
        border-bottom-width: var(--border-block-end-width);
        border-block-end-width: var(--border-block-end-width);
      }
    }
  }
}

@include describe('.left') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include width.left(1rem); }
      @include expect {
        --border-inline-start-width: 1rem;
        border-left-width: var(--border-inline-start-width);
        border-inline-start-width: var(--border-inline-start-width);
      }
    }
  }
}

@include describe('.t') {
  @include it('outputs .top') {
    @include assert {
      @include output { @include width.t(1rem); }
      @include expect { @include width.top(1rem); }
    }
  }
}

@include describe('.r') {
  @include it('outputs .right') {
    @include assert {
      @include output { @include width.r(1rem); }
      @include expect { @include width.right(1rem); }
    }
  }
}

@include describe('.b') {
  @include it('outputs .bottom') {
    @include assert {
      @include output { @include width.b(1rem); }
      @include expect { @include width.bottom(1rem); }
    }
  }
}

@include describe('.l') {
  @include it('outputs .left') {
    @include assert {
      @include output { @include width.l(1rem); }
      @include expect { @include width.left(1rem); }
    }
  }
}
