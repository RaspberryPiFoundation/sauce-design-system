@use 'true' as *;
@use 'scss/mixins/logical-properties';

@include describe('.apply') {
  @include it('accepts CSS value') {
    @include assert {
      @include output { @include logical-properties.apply('color', red); }
      @include expect {
        --color: red;
        color: var(--color);
      }
    }
  }

  @include it('accepts CSS custom property') {
    @include assert {
      @include output { @include logical-properties.apply('color', var(--link-color-active)); }
      @include expect {
        --color: var(--link-color-active);
        color: var(--color);
      }
    }
  }

  @include it('wraps custom property in var()') {
    @include assert {
      @include output { @include logical-properties.apply('color', '--link-color-active'); }
      @include expect {
        --color: var(--link-color-active);
        color: var(--color);
      }
    }
  }

  @include it('outputs a fallback property') {
    @include assert {
      @include output {
        @include logical-properties.apply('gap', 1rem, 'grid-gap');
      }
      @include expect {
        --gap: 1rem;
        grid-gap: var(--gap);
        gap: var(--gap);
      }
    }
  }

  @include it('outputs mulitple fallback properties') {
    @include assert {
      @include output {
        @include logical-properties.apply('margin-inline', 1rem, ['margin-left', 'margin-right']);
      }
      @include expect {
        --margin-inline: 1rem;
        margin-left: var(--margin-inline);
        margin-right: var(--margin-inline);
        margin-inline: var(--margin-inline);
      }
    }
  }
}
