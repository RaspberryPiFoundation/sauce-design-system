@use 'true' as *;
@use 'scss/mixins/margin';

@include describe('.all') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include margin.all(1rem); }
      @include expect {
        --margin: 1rem;
        margin: var(--margin);
      }
    }
  }
}

@include describe('.none') {
  @include it('outputs .all') {
    @include assert {
      @include output { @include margin.none; }
      @include expect { @include margin.all(0); }
    }
  }
}

@include describe('.inline') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include margin.inline(1rem); }
      @include expect {
        --margin-inline: 1rem;
        margin-left: var(--margin-inline);
        margin-right: var(--margin-inline);
        margin-inline: var(--margin-inline);
      }
    }
  }
}

@include describe('.block') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include margin.block(1rem); }
      @include expect {
        --margin-block: 1rem;
        margin-top: var(--margin-block);
        margin-bottom: var(--margin-block);
        margin-block: var(--margin-block);
      }
    }
  }
}

@include describe('.top') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include margin.top(1rem); }
      @include expect {
        --margin-block-start: 1rem;
        margin-top: var(--margin-block-start);
        margin-block-start: var(--margin-block-start);
      }
    }
  }
}

@include describe('.right') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include margin.right(1rem); }
      @include expect {
        --margin-inline-end: 1rem;
        margin-right: var(--margin-inline-end);
        margin-inline-end: var(--margin-inline-end);
      }
    }
  }
}

@include describe('.bottom') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include margin.bottom(1rem); }
      @include expect {
        --margin-block-end: 1rem;
        margin-bottom: var(--margin-block-end);
        margin-block-end: var(--margin-block-end);
      }
    }
  }
}

@include describe('.left') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include margin.left(1rem); }
      @include expect {
        --margin-inline-start: 1rem;
        margin-left: var(--margin-inline-start);
        margin-inline-start: var(--margin-inline-start);
      }
    }
  }
}

@include describe('.t') {
  @include it('outputs .top') {
    @include assert {
      @include output { @include margin.t(1rem); }
      @include expect { @include margin.top(1rem); }
    }
  }
}

@include describe('.r') {
  @include it('outputs .right') {
    @include assert {
      @include output { @include margin.r(1rem); }
      @include expect { @include margin.right(1rem); }
    }
  }
}

@include describe('.b') {
  @include it('outputs .bottom') {
    @include assert {
      @include output { @include margin.b(1rem); }
      @include expect { @include margin.bottom(1rem); }
    }
  }
}

@include describe('.l') {
  @include it('outputs .left') {
    @include assert {
      @include output { @include margin.l(1rem); }
      @include expect { @include margin.left(1rem); }
    }
  }
}
