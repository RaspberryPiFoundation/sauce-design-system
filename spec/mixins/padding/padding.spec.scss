@use 'true' as *;
@use 'scss/mixins/padding';

@include describe('.all') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include padding.all(1rem); }
      @include expect {
        --padding: 1rem;
        padding: var(--padding);
      }
    }
  }
}

@include describe('.none') {
  @include it('outputs .all') {
    @include assert {
      @include output { @include padding.none; }
      @include expect { @include padding.all(0); }
    }
  }
}

@include describe('.inline') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include padding.inline(1rem); }
      @include expect {
        --padding-inline: 1rem;
        padding-left: var(--padding-inline);
        padding-right: var(--padding-inline);
        padding-inline: var(--padding-inline);
      }
    }
  }
}

@include describe('.block') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include padding.block(1rem); }
      @include expect {
        --padding-block: 1rem;
        padding-top: var(--padding-block);
        padding-bottom: var(--padding-block);
        padding-block: var(--padding-block);
      }
    }
  }
}

@include describe('.top') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include padding.top(1rem); }
      @include expect {
        --padding-block-start: 1rem;
        padding-top: var(--padding-block-start);
        padding-block-start: var(--padding-block-start);
      }
    }
  }
}

@include describe('.right') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include padding.right(1rem); }
      @include expect {
        --padding-inline-end: 1rem;
        padding-right: var(--padding-inline-end);
        padding-inline-end: var(--padding-inline-end);
      }
    }
  }
}

@include describe('.bottom') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include padding.bottom(1rem); }
      @include expect {
        --padding-block-end: 1rem;
        padding-bottom: var(--padding-block-end);
        padding-block-end: var(--padding-block-end);
      }
    }
  }
}

@include describe('.left') {
  @include it('outputs the css') {
    @include assert {
      @include output { @include padding.left(1rem); }
      @include expect {
        --padding-inline-start: 1rem;
        padding-left: var(--padding-inline-start);
        padding-inline-start: var(--padding-inline-start);
      }
    }
  }
}

@include describe('.t') {
  @include it('outputs .top') {
    @include assert {
      @include output { @include padding.t(1rem); }
      @include expect { @include padding.top(1rem); }
    }
  }
}

@include describe('.r') {
  @include it('outputs .right') {
    @include assert {
      @include output { @include padding.r(1rem); }
      @include expect { @include padding.right(1rem); }
    }
  }
}

@include describe('.b') {
  @include it('outputs .bottom') {
    @include assert {
      @include output { @include padding.b(1rem); }
      @include expect { @include padding.bottom(1rem); }
    }
  }
}

@include describe('.l') {
  @include it('outputs .left') {
    @include assert {
      @include output { @include padding.l(1rem); }
      @include expect { @include padding.left(1rem); }
    }
  }
}
