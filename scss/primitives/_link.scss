@use 'scss/mixins/helpers';

/**
 * PLEASE NOTE
 *
 * The order of the visited/focus/hover/active states is deliberate.
 * See https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Styling_links#styling_some_links
 *
 * Remember: LoVe Fears HAte!
 */
@mixin primary {
  // Include mixins
  @include helpers.focusable;

  // Setup tokens
  --color-text-base: var(--color-text-link);
  --color-text-active: var(--color-text-link-active);
  --color-text-visited: var(--color-text-link-visited);
  --color-background-base: var(--color-background-link);
  --color-background-active: var(--color-background-link-active);
  --color-background-visited: var(--color-background-link-visited);

  // Setup custom properties
  --background-color: var(--color-background-base);
  --color: var(--color-text-base);
  --font-weight: var(--font-weight-medium);
  --transition-duration: var(--transition-duration-promptly);
  --transition-timing-function: var(--transition-timing-eased),
    var(--transition-timing-elastic);

  // Define rules
  background-color: var(--background-color);
  color: var(--color);
  font-weight: var(--font-weight);
  text-decoration: underline;
  transition-duration: var(--transition-duration);
  transition-property: background-color, color, outline-offset;
  transition-timing-function: var(--transition-timing-function);

  // Define pseudo-classes
  &:visited {
    --background-color: var(--color-background-visited);
    --color: var(--color-text-visited);
  }

  &:focus,
  &:hover,
  &:active {
    --background-color: var(--color-background-active);
    --color: var(--color-text-active);
  }
}

@mixin breakout {
  &::after {
    @include helpers.cover;
  }
}

@mixin inverted {
  --color-text-base: var(--color-text-link-inverse-base);
  --color-text-active: var(--color-text-link-inverse-active);
  --color-text-visited: var(--color-text-link-inverse-visited);
}

@mixin no-visited-state {
  --color-text-visited: var(--color-text-base);
}
