@use 'sauce_overrides/mixins/utilities';
@use '@rpf/sauce/scss/mixins/device';
@use '@rpf/sauce/scss/mixins/padding';
@use '@rpf/sauce/scss/mixins/type-scale';
@use '@rpf/sauce/scss/tokens/color-greyscale';
@use '@rpf/sauce/scss/tokens/font-weight';
@use '@rpf/sauce/scss/tokens/line-height';

@mixin primary {
  // Include mixins
  @include padding.block('ant');
  @include padding.inline('dog');
  @include type-scale.skateboard;
  @include utilities.focusable;

  // Setup tokens
  --color-background-base:     var(--color-background-button-primary-base);
  --color-background-active:   var(--color-background-button-primary-active);
  --color-background-disabled: var(--color-background-button-primary-disabled);
  --color-text-base:           var(--color-text-button-primary-base);
  --color-text-active:         var(--color-text-button-primary-active);
  --color-text-disabled:       var(--color-text-button-primary-disabled);

  // Setup custom properties
  --color-background: var(--color-background-base);
  --color-text:       var(--color-text-base);
  --width: 100%;

  // Define rules
  background-color: var(--color-background);
  border-radius: 0.5rem;
  border-width: 0;
  color: var(--color-text);
  display: inline-block;
  font-weight: font-weight.$medium;
  line-height: line-height.$cosy;
  text-align: center;
  width: var(--width);

  // Define pseudo-classes
  &:any-link {
    --color-background: var(--color-background-base);
    --color-text:       var(--color-text-base);

    text-decoration: none;
  }

  &:focus, &:hover, &:active {
    --color-background: var(--color-background-active);
    --color-text:       var(--color-text-active);
  }

  // Define media-queries
  @include device.min-width(600px) {
    --width: auto;
  }
}

@mixin disabled {
  &:disabled,
  &[disabled] {
    // Override custom properties
    --color-background: var(--color-background-disabled);
    --color-text:       var(--color-text-disabled);

    // Define other rules
    pointer-events: none;
  }

}
